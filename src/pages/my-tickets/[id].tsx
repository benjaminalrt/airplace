import FlightCard from "@/components/Flight"
import { getTicket } from "@/symfony/getTicket"
import { sellTicket } from "@/symfony/sellTicket"
import { Flight } from "@/types"
import Head from "next/head"
import Link from "next/link"
import { useState } from "react"
import flights from '../../datas/flights.json';

export async function getServerSideProps(context : any) {

  const ticket = await getTicket(context.params.id);
  
  return {
    props: { myTicket : ticket}, // will be passed to the page component as props
  }
}

interface TicketPageProps {
  myTicket: any;
}

export default function TicketPage({ myTicket }: TicketPageProps) {

  
  const [ticket, setTicket] = useState(myTicket)
  const flight : Flight|undefined = flights.find(f => f.id == ticket.flightId) 

  const sell = async () => {
    await sellTicket(ticket.nftId, {onSale : true});
    setTicket({...ticket, onSale : true})
  }

  const cancelSell = async () => {
    await sellTicket(ticket.nftId, {onSale : false});
    setTicket({...ticket, onSale : false})
  }

  return (
    <>
      <Head>
        <title>Airplace - Ticket {ticket.id} </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='container flex flex-col gap-4 mx-auto py-8'>
        <div className="flex justify-between">
          <h1 className='text-2xl'>Dev Airplace - Flight to {flight?.destination} - <span className={`font-bold ${ticket.onSale ? 'text-green-400' : 'text-red-400'}`}>{ticket.onSale ? 'on sale' : 'not on sale'}</span></h1>
          
        </div>

        <div className="flex gap-8">
          <div className="w-48 h-48">
            <img className='object-cover' src={`https://benjami.fr/assets/${flight?.city}.png`} alt="" />
          </div>
          <div className="flex flex-col justify-end items-end">
            <div className="flex items-end gap-2">
              <Link href={'/my-tickets'} className="bg-gray-200 hover:bg-white border rounded-lg px-3 py-2">Back</Link>
              {!ticket.onSale && 
                <button className={`px-4 py-2 rounded-lg bg-green-400`} onClick={sell}>Sell my ticket</button>
              }
              {ticket.onSale && 
                <button className={`px-4 py-2 rounded-lg bg-red-400`} onClick={cancelSell}>Cancel selling my ticket</button>
              }
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
